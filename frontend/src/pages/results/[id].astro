---
import Layout from "../../layouts/Layout.astro";
import "../../styles/global.css";
import AddRecipe from "../../components/AddRecipe.astro";
import Header from "../../components/Header.astro";

const { id } = Astro.params;

let recipe = null;
try {
  const res = await fetch(
    `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`
  );
  if (res.ok) {
    recipe = await res.json();
  }
} catch (error) {
  console.error("Error fetching recipe:", error);
}

// export async function getStaticPaths() {
//   const res = await fetch(
//     "https://www.themealdb.com/api/json/v1/1/search.php?s="
//   );
//   const data = await res.json();
//   console.log(data);

//   return data.meals.map((recipe: any) => ({
//     params: { id: recipe.idMeal },
//     props: recipe,
//   }));
// }

// const {
//   strMeal,
//   strMealThumb,
//   strCategory,
//   strArea,
//   strInstructions,
//   ...rest
// } = Astro.props;

const getIngredients = () => {
  let ingredients = [];
  for (let i = 1; i <= 20; i++) {
    const ingredient = recipe.meals[0][`strIngredient${i}`];
    const measure = recipe.meals[0][`strMeasure${i}`];
    if (ingredient && ingredient.trim() !== "") {
      ingredients.push({ name: ingredient, measure: measure || "" });
    }
  }
  return ingredients;
};

const ingredients = getIngredients();
const instructions = recipe.meals[0].strInstructions
  ? recipe.meals[0].strInstructions
      .split(".")
      .filter((inst) => inst.trim() !== "")
  : [];
---

<Layout>
  <main class="hidden font-display">
    <div class="container mx-[auto] w-11/12">
      <Header/>
      <div class="home-body w-full flex flex-col gap-3.5 rounded-lg p-1">
        <img
          class="w-full rounded-lg"
          src={recipe.meals[0].strMealThumb}
          alt={recipe.meals[0].strMeal}
        />
        <h1 class="text-center text-xl font-semibold">
          {recipe.meals[0].strMeal}
        </h1>

        <div
          class="flex flex-col gap-3 recipe-text rounded-lg bg-gray-100 px-4 py-3"
        >
          <div class="flex justify-between items-center">
            <h3 id="ingredients-tab" class="w-1/2 py-2">Ingredients List</h3>
            <h3
              id="instructions-tab"
              class="text-center w-1/2 text-blue-700 border border-gray-400 hover:bg-white focus:outline-non text-sm rounded-lg py-2"
            >
              Cooking Instructions
            </h3>
          </div>

          <ul id="ingredients-list" class="flex flex-col gap-2">
            {
              ingredients.map((item) => (
                <li class="border-2 border-gray-200 text-sm flex items-center gap-2 bg-white rounded-md p-2">
                  <img
                    class="p-2 rounded-lg w-8 h-8"
                    src={`https://www.themealdb.com/images/ingredients/${item.name}-Small.png`}
                    alt={item.name}
                  />
                  {item.name} - {item.measure}
                </li>
              ))
            }
          </ul>

          <ul id="instructions-list" class="flex flex-col gap-2 hidden">
            {
              instructions.map((step, index) => (
                <li class="border-2 border-gray-200 text-sm bg-white rounded-md p-2">
                  <strong>Step {index + 1}:</strong> {step}.
                </li>
              ))
            }
          </ul>
        </div>

        <div class="recipe-list-btns flex gap-2">
          <a
            href="#" onclick="window.history.back(); return false;"
            class="w-full text-center text-white bg-blue-700 hover:bg-blue-800 text-sm rounded-lg p-2.5"
          >
            Go Back
          </a>
          <button
            class="bg-gray-200 border border-gray-300 hover:bg-gray-300 text-gray-900 text-sm rounded-lg w-full p-2.5"
          >
            Add to List
          </button>
        </div>
      </div>
    </div>
  </main>
  <AddRecipe />
</Layout>

<script>
  const content = document.querySelector("main") as HTMLElement;

  const checkAuth = async () => {
    const res = await fetch(`http://localhost:4500/users/check-auth`, {
      method: "GET",
      credentials: "include",
    });
    if (!res.ok) {
      alert("You have to be logged in to do that");
      window.location.href = "/login";
      return;
    }
    content.style.display = "block";
  };
  document.addEventListener("DOMContentLoaded", () => {
    checkAuth();
    const ingredientsTab = document.getElementById(
      "ingredients-tab"
    ) as HTMLHeadingElement;
    const instructionsTab = document.getElementById(
      "instructions-tab"
    ) as HTMLHeadingElement;
    const ingredientsList = document.getElementById(
      "ingredients-list"
    ) as HTMLUListElement;
    const instructionsList = document.getElementById(
      "instructions-list"
    ) as HTMLUListElement;

    ingredientsList.classList.remove("hidden");
    instructionsList.classList.add("hidden");

    ingredientsTab.addEventListener("click", () => {
      ingredientsList.classList.remove("hidden");
      instructionsList.classList.add("hidden");
    });

    instructionsTab.addEventListener("click", () => {
      instructionsList.classList.remove("hidden");
      ingredientsList.classList.add("hidden");
    });
  });
</script>
